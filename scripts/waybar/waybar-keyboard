#!/usr/bin/env sh
#
# WAYBAR KEYBOARD MODULE
#
# Main command outputs active layout. `switch` subcommand cycles layout. For simple personal use.
#
# @usage
#   ```json
#     "custom/keyboard": {
#       "exec": "waybar-keyboard",
#       "format": "<span font='16' rise='-1500'>ï ‹ </span><span rise='2000'>{}</span>",
#       "interval": 30,
#       "on-click": "waybar-keyboard switch",
#       "return-type": "json"
#     }
#   ```
# @author   Daniel Nordstrom <d@mrnordstrom.com>
# @version  2022-07-23
# @license  MIT
#

# TODO: Get available IDs from swaymsg; use arguments as IDs; just use first/last element, etc.

id="9456:322:Metadot_-_Das_Keyboard_D4269"
input=$(swaymsg -t get_inputs | jq "first(.[] | select(.identifier==\"$id\"))")
index=$(printf "%s" "$input" | jq ".xkb_active_layout_index")
count=$(printf "%s" "$input" | jq ".xkb_layout_names | length")

if [ "switch" = "$1" ]; then
  swaymsg input "$id" xkb_switch_layout $(((index + 1) % count))
fi

active=$(swaymsg -t get_inputs | jq -r "last(.[] | select(.identifier==\"$id\")).xkb_active_layout_name")

if [ "null" = "$active" ]; then
  active="Unknown"
else
  active="$(printf "%s" "$active" | cut -d' ' -f1)"
fi

printf "%s" "{ \"text\": \"$active\", \"tooltip\": \"$id\", \"class\": \"keyboard\" }"
