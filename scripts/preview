#!/usr/bin/env sh
#
# Links local `.config` directories to `/etc/nixos`, allowing "live" editing to
# see changes without rebuilding. Asks for confirmation before deleting to
# prevent sadness.
#

set -eu

usage="USAGE:
    $(basename "$0")

DESCRIPTION:
    Removes symlinks to currently installed configurations and replaces them with symlinks to the /etc/nixos configurations for previewing changes without first needing to run a NixOS rebuild. Warns before deleting files.

OPTIONS:
    --help, -h        Show this help text
"

for arg in "$@"
do
  case $arg in
    -h|--help)
    printf "\n%s\n" "$usage"
    exit 0
    shift
    ;;
  esac
done

# Set up error and interruption traps to show if toggle fails or is cancelled
trap 'printf "\n\n%s\n\n" "Error: Preview mode not enabled."; exit 1;' ERR
trap 'printf "\n\n%s\n\n" "Cancelled: Preview mode not enabled."; exit 1;' SIGINT

# Customizable confirmation prompt
confirm() {
  local OPTIND
  local strict=0
  local yes="y" 
  local no="n"
  local left="["
  local right="]"
  local grep="--ignore-case --quiet" # Default grep flags
  local prompt="Continue?" # Default message

  for arg in "$@"
  do
    case $arg in
      # Right side of prompt
      -r|--right)
      shift
      right="$1"
      ;;
      # Left side of prompt
      -l|--left)
      shift
      left="$1"
      ;;
      # Strict mode requires uppercase for yes
      -s|--strict)
      strict=1
      shift
      ;;
      # Option to display for yes
      -y|--yes)
      shift
      yes="$1"
      ;;
       # Option to display for no
      -n|--no)
      shift
      no="$1"
      ;;
      # Show usage information
      -h|--help)
      help="$1"
      shift
      ;;
      # The remaining is used as prompt
      *)
      prompt="$@"
      shift
      ;;
    esac
  done

  # Strict mode always requires uppercase yes
  if [ $strict -gt 0 ]; then
    yes=$(echo "$yes" | tr "[:lower:]" "[:upper:]")
    grep="--quiet"
  fi

  # Print message and prompt
  printf "%s " "$prompt $left$yes/$no$right"

  # Set stty options to get one letter input without waiting for enter key and
  # then reset to previous options
  sttystate=$(stty -g)
  stty raw -echo
  input=$(head -c 1)
  stty $sttystate

  printf "%s" "$input"

  # Grep input using flags determined by strict mode
  if echo "$input" | grep $grep "^$yes"; then
    return 0 # Yes
  else
    return 1 # No
  fi
}

loudly() {
  if [ $# -gt 0 ]; then
    printf "\$ %s\n" "$@"
    eval "$@"
    return 0
  else
    return 1
  fi
}

# ANSI color coding
notestart=$(tput bold; tput setaf 0; tput setab 3)
noteend=$(tput sgr0)
titlestart=$(tput bold; tput setaf 0; tput setab 6)
titleend=$(tput sgr0)

# Print title
printf "\n%s\n\n" $titlestart" Configuration preview mode "$titleend

# Ask about Sway
if confirm --strict "Enable for sway (rm -rf ~/.config/sway)?"; then
  printf "\n"
  loudly "rm -rf ~/.config/sway"
  loudly "ln -s /etc/nixos/config/sway ~/.config/sway"
fi

printf "\n"

# Ask about Waybar
if confirm "Enable for waybar (rm -rf ~/.config/waybar)?"; then
  printf "\n"
  loudly "rm -rf ~/.config/waybar"
  loudly "ln -s /etc/nixos/config/waybar ~/.config/waybar"
else
  printf "\n"
fi

printf "\n"

# Show result message
printf "%s\n\n" "Preview mode enabled!"
printf "%s\n\n" $notestart" NOTE: "$noteend" Modifying these local files will now change the /etc/nixos sources. Rebuilding NixOS returns life back to normal."
