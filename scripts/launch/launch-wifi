#!/usr/bin/env bash
#
# WIFI LAUNCHER
#
# Rofi wifi configuration menu using nmcli. Original by GitHub user zbaylin and improved fork by vlfldr.
#
# Credit
#
#     - Fork:       https://github.com/vlfldr/rofi-wifi-menu
#     - Original:   https://github.com/zbaylin/rofi-wifi-menu
#

# This prints a beautifully formatted list
LIST=$(nmcli --fields SSID,SECURITY,BARS device wifi list | sed '/^--/d' | sed 1d | sed -E "s/WPA*.?\S/~~/g" | sed "s/~~ ~~/~~/g" | sed s/802\.1X//g | sed "s/--/~~/g" | sed 's/  *~/~/g' | sed 's/~  */~/g' | sed 's/_/ /g' | column -t -s '~')

# Get current connection status
CONSTATE=$(nmcli -fields WIFI g)
if [[ "$CONSTATE" =~ "enabled" ]]; then
  TOGGLE="Disable wireless networking 睊"
elif [[ "$CONSTATE" =~ "disabled" ]]; then
  TOGGLE="Enable wireless networking 直"
fi

# Display menu; store user choice
CHENTRY=$(echo -e "$TOGGLE\n$LIST" | uniq -u | wofi -d)

# Store selected SSID
CHSSID=$(echo "$CHENTRY" | sed 's/\s\{2,\}/\|/g' | awk -F "|" '{print $1}')

if [ "$CHENTRY" = "" ]; then
  exit
elif [ "$CHENTRY" = "Enable wireless networking 直" ]; then
  nmcli radio wifi on
elif [ "$CHENTRY" = "Disable wireless networking 睊" ]; then
  nmcli radio wifi off
else
  # Get list of known connections
  KNOWNCON=$(nmcli connection show)

  # If the connection is already in use, then this will still be able to get the SSID
  if [ "$CHSSID" = "*" ]; then
    CHSSID=$(echo "$CHENTRY" | sed 's/\s\{2,\}/\|/g' | awk -F "|" '{print $3}')
  fi

  # Parses the list of preconfigured connections to see if it already contains the chosen SSID. This speeds up the connection process
  if [[ $(echo "$KNOWNCON" | grep "$CHSSID") = "$CHSSID" ]]; then
    nmcli con up "$CHSSID"
  else
    if [[ "$CHENTRY" =~ "" ]]; then
      WIFIPASS=$(echo " Press Enter if network is saved" | wofi -d -p " WiFi Password: " -P -lines 1)
    fi
    nmcli dev wifi con "$CHSSID" password "$WIFIPASS"
  fi
fi
