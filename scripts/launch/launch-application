#!/usr/bin/env sh
#
# FZF APPLICATION LAUNCHER
#
# Opens new terminal window listing applications with fzf, and launches selected application with
# swaymsg exec. Source based entirely on GitHub user ldelossa's fzf-startify script (link below).
#
# Credits:
#
#     - https://github.com/ldelossa/sway-fzfify
#

#
# CONSTANTS
#

SCRIPT="$0"
BOLD="\e[1m"
MAGENTA="\e[35m"
BLACK="\e[30m"
ITALIC="\e[3m"
NORMAL="\e[0m"

#
# SETTINGS
#

# Terminal
terminal="kitty"
class="fuzzyterm"
title="fuzzyterm"

# Styles
namestyle="$BOLD$MAGENTA"
descstyle="$ITALIC"
typestyle="$BLACK"

#
# LAUNCHER
#

if [ -n "$LAUNCHER_FIFO" ]; then
  choices="" # Fzf list items to select from
  entries="" # List item to command mapping, e.g. "$name:$cmd"

  # Store search results in named pipe
  fd -H -i -g '*.desktop' -t x -t l /etc/profiles/per-user/dnordstrom/share/applications /var/lib/flatpak/app >"$LAUNCHER_FIFO" &

  # Read results from pipe
  while read -r path; do
    # Make sure the right .desktop files are used for Flatpak applications
    if [ "${path#*"files/share/applications"}" != "$path" ]; then
      continue
    elif [ "${path#*"export/share/applications"}" != "$path" ]; then
      flatpak="true"
    else
      flatpak=""
    fi

    # Get application name and command, and make ANSI label
    contents=$(cat "$path")
    cmd="$(printf "%b" "$contents" | grep -Pwo -m 1 -e "(?<=^Exec=).*")"
    name="$(printf "%b" "$contents" | grep -Pwo -m 1 -e "(?<=^Name=).*")"
    generic="$(printf "%b" "$contents" | grep -Pwo -m 1 -e "(?<=^GenericName=).*")"
    label="$namestyle$name$NORMAL" # Name with ANSI styling

    # Remove %U, %f, and similar from command
    cmd="$(printf "%s" "$cmd" | sed -e "s/%.//g")"

    # Skip item if name or command is empty, or command is already stored
    if [ -z "$name" ] || [ -z "$cmd" ] || [ "${entries#*"$cmd"}" != "$entries" ]; then
      continue
    fi

    # Add generic name
    if [ -n "$generic" ]; then
      name="$name ($generic)"
      label="$label ($descstyle$generic$NORMAL)"
    fi

    # Add application type
    if [ -n "$flatpak" ]; then
      name="$name [Flatpak]"
      label="$label$typestyle [Flatpak]$NORMAL"
    else
      name="$name [Nix]"
      label="$label$typestyle [Nix]$NORMAL"
    fi

    # Store both name and label since fzf selection is matched against name without styling
    entry="$name:$cmd"
    choice="$label"

    # Check if this is the first entry
    if [ -z "$entries" ]; then
      entries="$entry"
      choices="$choice"
    else
      entries="$entries\n$entry"
      choices="$choices\n$choice"
    fi
  done <"$LAUNCHER_FIFO"

  # Show menu and get selection
  selection="$(printf "%b" "$choices" | fzf)"

  # If selection is not empty, launch mapped command
  if [ -n "$selection" ]; then
    name="$(printf "%s" "$selection" | sed 's/[][()\.^$\/?*+]/\\&/g')"
    cmd="$(printf "%b" "$entries" | grep -Pwo -m 1 -e "(?<=^$name:).*")"

    swaymsg exec "$cmd"
  fi

  # Over and out
  exit 0
fi

#
# INITIALIZE
#

# Create named pipe for search results
LAUNCHER_FIFO="$(mktemp -d)/launcher-pipe"
mkfifo -m 600 "$LAUNCHER_FIFO"

# Re-run with named pipe environment variable
"$terminal" \
  --title "$title" \
  --class "$class" \
  -- \
  sh -c "LAUNCHER_FIFO=$LAUNCHER_FIFO $SCRIPT"
