"
" Settings
"

colorscheme --url https://raw.githubusercontent.com/bezmi/base16-tridactyl/master/base16-nord.css nord

set newtab about:blank
set allowautofocus false
set editorcmd alacritty -e nvim %f '+normal!%lGzv%c|'
set hintchars fdsqjklmrezauiopwxcvghtybn
set searchengine g
set smoothscroll true
set tabopencontaineraware true
set visualenterauto false
set minincsearchlen 2

" Custom searches

set searchurls.g https://www.google.com/search?q=%s&num=100
set searchurls.gy https://www.google.com/search?q=%s&num=100&tbs=qdr:y
set searchurls.r https://www.google.com/search?q=%s%20site:reddit.com&num=100
set searchurls.mdn https://developer.mozilla.org/en-US/search?q=%s&topic=api&topic=js
set searchurls.npm https://www.npmjs.com/search?q=%s
set searchurls.nix https://search.nixos.org/packages?channel=unstable&size=500&query=%s
set searchurls.s https://searx.be/?q=%s
set searchurls.sp https://www.startpage.com/do/search?query=%s
set searchurls.ddg https://duckduckgo.com/?kp=-2&q=%s&ia=web

set searchengine g

"
" Commands
"

" Convenience
command withurl composite get_current_url |

" Replace binds with another prefix (exclamation point removes old binds)
command bindreplaceprefix js -d% const [_, oldPrefix, newPrefix] = JS_ARGS; Object.entries(tri.config.get('nmaps')).map(([key, cmd]) => ({ key, cmd })).filter(({ key }) => key.startsWith(oldPrefix)).map(({ key, cmd }) => { tri.excmds.bind('--mode=normal', key.replace(oldPrefix, newPrefix), cmd); }) %
command bindreplaceprefix! js -d% const [_, oldPrefix, newPrefix] = JS_ARGS; Object.entries(tri.config.get('nmaps')).map(([key, cmd]) => ({ key, cmd })).filter(({ key }) => key.startsWith(oldPrefix)).map(({ key, cmd }) => { tri.excmds.bind('--mode=normal', key.replace(oldPrefix, newPrefix), cmd); tri.excmds.unbind(key); }) %

" Shows standard OS notification on Linux and always logs to console
command notify js -p tri.excmds.exclaim_quiet(`notify-send ${JS_ARG}`); console.info(`TRIDACTYL: ${JS_ARG}`);

" Inspect a JavaScript object in the console
command jsp js -p tri.excmds.js(`console.dir(${JS_ARG})`);
command jsbp js -p tri.excmds.js(`console.dir(${JS_ARG})`);

"
" Key Binds
"

" Preserve defaults
unbind <C-f>
unbind <C-e>

bind <Space><Space> fillcmdline_notrail
bind <Space>b !s xdotool search "Mozilla Firefox" windowactivate --sync key --clearmodifiers ctrl+e

" Vim-like search

bind / fillcmdline find
bind ? fillcmdline find -?
bind n findnext 1
bind N findnext -1
bind <Space>h nohlsearch

" Tabs

bind H tabprev
bind L tabnext
bind K forward
bind J back
bind x tabclose

" Classic text binds

bind --mode=ex <C-a> text.beginning_of_line
bind --mode=insert <C-a> text.beginning_of_line
bind --mode=input <C-a> text.beginning_of_line
bind --mode=ex <C-e> text.end_of_line
bind --mode=insert <C-e> text.end_of_line
bind --mode=input <C-e> text.end_of_line
bind --mode=ex <C-f> text.forward_word
bind --mode=insert <C-f> text.forward_word
bind --mode=input <C-f> text.forward_word
bind --mode=ex <C-k> text.kill_line
bind --mode=insert <C-k> text.kill_line
bind --mode=input <C-k> text.kill_line
bind --mode=ex <C-u> text.backward_kill_line
bind --mode=insert <C-u> text.backward_kill_line
bind --mode=input <C-u> text.backward_kill_line
bind --mode=ex <C-V> composite getclip selection | text.insert_text
bind --mode=insert <C-V> composite getclip selection | text.insert_text
bind --mode=input <C-V> composite getclip selection | text.insert_text
bind --mode=ex <C-w> text.backward_kill_word
bind --mode=insert <C-w> text.backward_kill_word
bind --mode=input <C-w> text.backward_kill_word

" Sanitize on exit
bind ZZ composite sanitise tridactyllocal tridactylsync; qall

" Marks

quickmark r https://www.reddit.com/
quickmark g https://www.github.com/
quickmark o https://nix-community.github.io/home-manager/options.html
quickmark O https://search.nixos.org/options
quickmark i https://imgur.com/
quickmark y https://youtube.com/

" Marks on ' like in Vim
bindreplaceprefix go '

"
" Blacklist
"

blacklistadd mail.google.com mode ignore
blacklistadd leeroy-group.atlassian.net mode ignore

"
" Auto-Commands
"#2e3440

" Change new tab page title and favicon
autocmd DocStart moz-extension://.*/static/newtab.html js document.head.querySelector('link[rel="shortcut icon"]').href = "https://static-media-prod-cdn.itsre-sumo.mozilla.net/static/sumo/img/favicon-32x32.png"; document.title = "New tab"; document.body.innerHTML = '';

" Add button to Nix package search results to copy package name to clipboard
autocmd DocLoad .*search\.nixos\.org/packages.+ js setTimeout(() => { const node = document.createElement('li'); const link = document.createElement('a'); node.appendChild(link); link.href = '#'; link.classList.add('copy-to-clipboard'); link.innerText = 'Copy to clipboard'; document.querySelectorAll('.package ul').forEach(links => { const clone = node.cloneNode(true); clone.firstElementChild.title = links.parentElement.getElementsByClassName('search-result-button')[0].textContent; links.appendChild(clone); }); document.addEventListener('click', event => {  if (event.target.classList.contains('copy-to-clipboard')) { navigator.clipboard.writeText(event.target.title); event.preventDefault(); } }) }, 3000);

" Add button to home manager options page to copy option including example
autocmd DocLoad .*nix-community\.github\.io/home-manager/options\.html.* js document.querySelectorAll('dt span.term').forEach(node => { const dt = node.parentElement.nextElementSibling; const textEl = dt.querySelector('.programlisting') || dt.querySelector('.literal'); if (textEl) { const copy = document.createElement('span'); copy.appendChild(document.createTextNode(' - ')); copy.style.cursor = 'pointer'; const code = document.createElement('code'); code.className = 'copy'; code.setAttribute('data-copy', `${node.textContent} = ${textEl.textContent.trim()};`); code.appendChild(document.createTextNode('Copy to clipboard')); copy.appendChild(code); node.appendChild(copy); } }); document.querySelector('dl').addEventListener('click', event => { if (event.target.className === 'copy') { const text = event.target.getAttribute('data-copy'); navigator.clipboard.writeText(text); console.log(text); }});

"
" Notes
"

" Nord base00 color (background)
" #2e3440

" If it becomes possible to use data-URI's as new tab page, something like this:
set newtab data:text/html,<html><head><title>New tab</title><style>body { background: rgb(46, 52, 64); color: white; padding: 60px 20px; text-align: center; font: 1rem sans; } h1 { margin: 0 0 20px; } body > div { display: inline-block; text-align: left; } div > div {} span { display: inline-block; } span:first-child { margin: 0 20px 0 0; } pre { margin: 0; } a,a:hover { color: white; display: inline-block; text-decoration: none; top: 12px; right: 12px; position: absolute; }</style></head><body><h1>Where to?</h1><div><div><span><pre>:o</pre></span><span>Open...</span></div><div><span><pre>:t</pre></span><span>Open in tab...</span></div></div><a href="">?</a></body></html>

" vim: set filetype=vim:
" -*- mode: vim -*-
