"
" Settings
"

colorscheme --url https://raw.githubusercontent.com/bezmi/base16-tridactyl/master/base16-nord.css nord

set allowautofocus false
set editorcmd alacritty -e nvim %f '+normal!%lGzv%c|'
set hintchars fdsqjklmrezauiopwxcvghtybn
set searchengine g
set smoothscroll true
set tabopencontaineraware true
set visualenterauto false

" Custom searches

set searchurls.g https://www.google.com/search?q=%s&num=100&tbs=qdr:y
set searchurls.mdn https://developer.mozilla.org/en-US/search?q=%s&topic=api&topic=js
set searchurls.npm https://www.npmjs.com/search?q=%s
set searchurls.nix https://search.nixos.org/packages?channel=unstable&size=500&query=%s
set searchurls.s https://searx.be/?q=%s
set searchurls.sp https://www.startpage.com/do/search?query=%s
set searchurls.ddg https://duckduckgo.com/?kp=-2&q=%s&ia=web

set searchengine g

"
" Key Binds
"

" Vim-like search

unbind <C-f>
bind / fillcmdline find
bind ? fillcmdline find -?
bind n findnext 1
bind N findnext -1
bind <Space><Space> nohlsearch

" Tabs

bind H tabprev
bind L tabnext
bind K forward
bind J back
bind x tabclose

" Classic text binds

bind --mode=ex <C-a> text.beginning_of_line
bind --mode=insert <C-a> text.beginning_of_line
bind --mode=input <C-a> text.beginning_of_line
bind --mode=ex <C-e> text.end_of_line
bind --mode=insert <C-e> text.end_of_line
bind --mode=input <C-e> text.end_of_line
bind --mode=ex <C-f> text.forward_word
bind --mode=insert <C-f> text.forward_word
bind --mode=input <C-f> text.forward_word
bind --mode=ex <C-k> text.kill_line
bind --mode=insert <C-k> text.kill_line
bind --mode=input <C-k> text.kill_line
bind --mode=ex <C-u> text.backward_kill_line
bind --mode=insert <C-u> text.backward_kill_line
bind --mode=input <C-u> text.backward_kill_line
bind --mode=ex <C-V> composite getclip selection | text.insert_text
bind --mode=insert <C-V> composite getclip selection | text.insert_text
bind --mode=input <C-V> composite getclip selection | text.insert_text
bind --mode=ex <C-w> text.backward_kill_word
bind --mode=insert <C-w> text.backward_kill_word
bind --mode=input <C-w> text.backward_kill_word

" Quick Marks

quickmark r https://www.reddit.com/
quickmark g https://www.github.com/
quickmark o https://nix-community.github.io/home-manager/options.html
quickmark O https://search.nixos.org/options
quickmark i https://imgur.com/
quickmark y https://youtube.com/

"
" Commands
"

command notify js -p tri.native.run(`notify-send ${JS_ARG}`);

"
" Blacklist
"

blacklistadd mail.google.com mode ignore
blacklistadd leeroy-group.atlassian.net mode ignore

"
" Auto-Commands
"

autocmd DocStart .*google\.com/search.+ js if (!location.search.includes('modified=true')) { const params = new URL(location.href).searchParams; params.set('tbs', 'qdr:y'); params.set('num', '100'); params.set('modified', 'true'); location.search = params.toString(); console.info('TRIDACTYL: Changed to results from the past year, and to show 100 results per page.') };
autocmd DocLoad .*search\.nixos\.org/(packages|options).+ js setTimeout(() => { const node = document.createElement('li'); const link = document.createElement('a'); node.appendChild(link); link.href = '#'; link.classList.add('copy-to-clipboard'); link.innerText = 'Copy to clipboard'; document.querySelectorAll('.package ul').forEach(links => { const clone = node.cloneNode(true); clone.firstElementChild.title = links.querySelector('li:first-of-type').textContent; links.appendChild(clone); }); document.addEventListener('click', event => { event.preventDefault(); if (event.target.classList.contains('copy-to-clipboard')) tri.excmds.yank(event.target.title); }) }, 3000);

" vim: set filetype=vim:
" -*- mode: vim -*-
