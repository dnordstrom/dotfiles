""
" TRIDACTYL CONFIGURATION
"
" Contains settings, commands, binds, marks. Mimics my Neovim configuration as much as possible.
"
" Space key is used as a simulated leader key. Binds without modifier or leader usually compliment
" defaults while those with leader key or modifier maps custom functionality.
"
" The configuration is pseudo-immutable in the sense that it resets all settings on launch to
" make it simple to try new settings and commands.
"
" The theme is available in `catppuccin.css` and based on the Catppuccin palette linked below.
"
" Author:     Daniel Nordstrom <d@mrnordstrom.com>
" Website:    https://mrnordstrom.com
" Repository: https://github.com/dnordstrom/dotfiles
" See:
"   - Catppuccin colors and themes:
"     https://github.com/catppuccin
" Credit:
"   - Special thanks to Tridactyl maintainer bovine3dom and all contributors of this amazing tool.
""

""
" RESET
""

" Restore default configuration
sanitise tridactyllocal tridactylsync

""
" SETTINGS
""

colorscheme catppuccin

"
" General
"

set newtab about:blank
set searchengine qwant
set editorcmd kitty --class popupterm -e nvim %f "+normal!%lGzv%c|"
set rsscmd openfeed %u
set viewsource tridactyl
set allowautofocus false

"
" Behavior
"

set smoothscroll true
set tabopencontaineraware true
set visualenterauto true

"
" Modes
"   Hide mode indicator in ignore mode.
"

set modeindicatormodes { "ignore": "false" }

"
" Hints
"   Numeric hints that update as you type part of the target.
"

set hintfiltermode vimperator-reflow
set hintuppercase false
set hintnames numeric

"
" Site-specific
"

"
" atlassian.com
"

" Fix unresponsive assignee field in Jira.
seturl atlassian.net allowautofocus true

" Only hint search results on Google and DDG.
bindurl google.com f hint -Jc #search div:not(.action-menu) > a
bindurl google.com F hint -Jbc #search div:not(.action-menu) > a
 
" Only hint search results on DuckDuckGo.
bindurl duckduckgo.com f hint -Jc [data-testid="result-title-a"]
bindurl duckduckgo.com F hint -Jbc [data-testid="result-title-a"]
"

""
" SEARCH
""

"
" Simple query
"

" Default `s` keyword search: Google, from past year, 100 results per page.
set searchurls.s https://www.google.com/search?q=%s&num=100&tbs=qdr:y

" Google: with 100 results per page.
set searchurls.g https://www.google.com/search?q=%s&num=100

" Google: from past year, 100 results per page.
set searchurls.gr https://www.google.com/search?q=%s&num=100&tbs=qdr:y

" Reddit: using Google, 100 results per page.
set searchurls.gy https://www.google.com/search?q=%s%20site:reddit.com&num=100

" Reddit: using Google, limits search to past year, 100 results per page.
set searchurls.gy https://www.google.com/search?q=%s%20site:reddit.com&num=100&tbs=qdr:y

" Mozilla Developer Network: JavaScript APIs
set searchurls.mdn https://developer.mozilla.org/en-US/search?q=%s&topic=api&topic=js

" NPM packages.
set searchurls.npm https://www.npmjs.com/search?q=%s

" Searx.
set searchurls.sx https://searx.be/?q=%s

" Startpage, Google stripped down for improved privacy.
set searchurls.sp https://www.startpage.com/do/search?query=%s&num=100

" Startpage, Google stripped down for improved privacy.
set searchurls.spy https://www.startpage.com/do/search?query=%s&num=100&tbs=qdr:y

" DuckDuckGo.
set searchurls.ddg https://duckduckgo.com/?q=%s

" DuckDuckGo: limit results to past year.
set searchurls.ddg https://duckduckgo.com/?q=%s

" Translate: use the `!translate` bang in DuckDuckGo.
set searchurls.t https://duckduckgo.com/?q=%s

" YouTube.
set searchurls.y https://www.youtube.com/results?search_query=%s

" YouTube Music
set searchurls.ym https://music.youtube.com/search?q=%s

" Nix packages: searches unstable channel, 500 results per page.
set searchurls.n https://search.nixos.org/packages?channel=unstable&size=500&query=%s

" Nix options: searches unstable channel, 500 results per page.
set searchurls.no https://search.nixos.org/options?channel=unstable&size=500&query=%s

" Qwant Lite: light, pink, safe search disabled, English, US region.
set searchurls.qwant https://lite.qwant.com/?q=%s&client=ext-lite-sb&l=en&locale=en_us&s=0&theme=0&ta=0

"
" Pre-processed query
"

" Search current site using Google: `:tabopen c my search` on Reddit uses query "my search site:reddit.com".
set jsurls.c query => `https://google.com/search?q=${query} site:${location.hostname}`

" Nix packages and options (packages unless query includes a period).
set jsurls.n \
  query => query.includes('.') ? \
    `https://search.nixos.org/options?channel=unstable&size=500&query=${query}` : \
    `https://search.nixos.org/packages?channel=unstable&size=500&query=${query}`

" Mail delivery days.
set jsurls.post `https://postnord.se`
pipecontrol

""
" COMMANDS
""

" Adjust fingerprinting and restricted domains preferences to allow using Tridactyl on more pages.
command fixamo_quiet jsb tri.excmds.setpref("privacy.resistFingerprinting.block_mozAddonManager", "true").then(tri.excmds.setpref("extensions.webextensions.restrictedDomains", '""'))
command fixamo js tri.excmds.setpref("privacy.resistFingerprinting.block_mozAddonManager", "true").then(tri.excmds.setpref("extensions.webextensions.restrictedDomains", '""').then(tri.excmds.fillcmdline_tmp(3000, "Permissions added to user.js. Please restart Firefox to make them take affect.")))

" Pass current URL to command.
command withurl composite get_current_url |

" Replace binds with another prefix (exclamation point removes old binds).
command bindreplaceprefix js -d% const [_, oldPrefix, newPrefix] = JS_ARGS; Object.entries(tri.config.get('nmaps')).map(([key, cmd]) => ({ key, cmd })).filter(({ key }) => key.startsWith(oldPrefix)).map(({ key, cmd }) => { tri.excmds.bind('--mode=normal', key.replace(oldPrefix, newPrefix), cmd); }) %
command bindreplaceprefix! js -d% const [_, oldPrefix, newPrefix] = JS_ARGS; Object.entries(tri.config.get('nmaps')).map(([key, cmd]) => ({ key, cmd })).filter(({ key }) => key.startsWith(oldPrefix)).map(({ key, cmd }) => { tri.excmds.bind('--mode=normal', key.replace(oldPrefix, newPrefix), cmd); tri.excmds.unbind(key); }) %

" Show command line notification.
command notifyex js % tri.excmds.fillcmdline_tmp(5000, JS_ARGS.join(' ').trim()); %

" Show OS notification.
command notifyos js -d% tri.native.run(`notify-send "${JS_ARGS.join(' ').trim()}"`); %

" Show JS console notification.
command notifyjs js -d% tri.native.run(("%c N.log ", "background: #d8dee9; color: #2e3440; font-weight: bold;", JS_ARGS.join(' ').trim()); %

" Inspect JavaScript object in console.
command jsp js -p tri.excmds.js(`console.dir(${JS_ARG})`);
command jsbp js -p tri.excmds.js(`console.dir(${JS_ARG})`);

" Append note to `~/.notes.firefox.md` (only URL and title if no argument).
command note js -d% const link = `[${document.title}](${document.location.toString()})`; const note
= JS_ARGS.join(' '); if (note) { tri.native.run(`touch ~/.notes.firefox.md && echo "- \"${note}\"
--- ${link}\n\$(command cat ~/.notes.firefox.md)" > ~/.notes.firefox.md`); } else { tri.native.run(`touch ~/.notes.firefox.md && echo "- ${link}\n$(cat ~/.notes.firefox.md)" > ~/.notes.firefox.md`); } %

" Prefill note command.
command fillcmdline_note js -p tri.excmds.fillcmdline_notrail(`note ${JS_ARG}`)

" Prefill note command with selection (using JS because of Wayland).
command fillcmdline_note_selection js tri.excmds.fillcmdline_notrail(`note ${window.getSelection()}`);

" Prefill note command with clipboard.
command fillcmdline_note_clipboard js tri.excmds.fillcmdline_notrail(`note ${await tri.excmds.getclip()}`);

" Get Jira issue key from URL.
command yankjira js -p if (JS_ARG.trim().toLowerCase() === 'url') N.run('yankjiraurl'); else N.run('yankjiraissue');
command yankjiraissue js const match = N.pathMatch(/[A-Z]{2,5}-[0-9]{1,4}/); if (match) N.yankLoud(match[0]); else N.notify('No issue key found.');
command yankjiraurl js const btn = N.query('.issue_view_permalink_button_wrapper'); if (btn) N.yankLoud(btn.previousElementSibling.querySelector('a').href); else N.notify('No issue link found.');

" Reload config from `/etc/nixos`.
command reconfiglive source /etc/nixos/config/firefox/tridactyl/tridactylrc

" Reload config from `~/.config/tridactyl`.
command reconfig source

" Save Instagram photo with human readable filename.
"
" The filenames in `srcset`, `src`, and `currentSource` look like hashes (e.g.,
" `316091346_1194156321456153_5338089432691464763_n.webp`) and are very long. Hence this function
" grabs post username from the header, combines it with description, and adds the file extension. To
" be able to specify our own filename for the download, we create an anchor element with `download`
" attribute, e.g. `<a href="data:..." download="dnordstrom_some_title.jpg">`.
"
" FIX: Currently no longer works, since Firefox blocks automatic downloads. Working on a version that
" offers a button or other UI for those cases.
"
" command writeinstagram js (() => { const a = document.createElement('a'); const cv = document.createElement('canvas'); const cx = cv.getContext('2d'); const img = document.querySelector('main[role="main"] article[role="presentation"] [role="button"] img'); cv.width = img.width; cv.height = img.height; cx.drawImage(img, 0,0); const ext = new URL(img.src).pathname.match(/(\w+)$/)[0]; const url = cv.toDataURL(`image/${ext == 'jpg' ? 'jpeg' : ext}`); a.download = `${img.alt.toLowerCase().replace(/[^\s\w]/g, '').replace(/\s+/g, '_')}.${ext}`; a.href = url; document.body.appendChild(a); a.click(); document.body.removeChild(a); })()

" Open profile directory.
command openprofile js (async () => { await tri.native.run(`xdg-open ${await tri.native.getProfileDir()}`); })()

" Open Feedly and load current page: with no feed, it can still create one by scraping for content.
command openfeed jsb -p (async () => { await tri.excmds.tabopen(`https://feedly.com/i/subscription/feed/${encodeURIComponent(JS_ARG)}`); })()

" Open video or audio in external player using `youtube-dl`.
command openmedia js (async () => { await tri.native.run(`youtube-dl "${location.href}" -o - | mpv -`); })()

""
" ALIASES
""

alias so source
alias rss rssexec

" Notification method to use
alias notify notifyos

""
" KEY MAPS
""

"
" General
"

" Restore Ctrl+F for native search
unbind <C-f>

" Restore Ctrl+B for sidebar
unbind <C-b>

" Hide search highlights on after entering normal mode via Escape
bind <Escape> composite hidecmdline ; mode normal ; nohlsearch

" View user modifications to config
bind <C-.> viewconfig --user

" Exit Firefox
bind ZQ exclaim_quiet pkill firefox-bin

" Save page
bind ZA saveas

" Restart Firefox
bind ZZ restart

"
" Reload
"

bind <Space>rr composite reconfig ; notify Configuration reloaded.
bind <Space>rR composite reconfiglive ; notify Live configuration reloaded.
bind <Space>ra reloadall ; notify All tabs reloaded.

"
" Notes
"

bind <Space>nn fillcmdline note
bind <Space>ny fillcmdline_note_selection
bind <Space>np fillcmdline_note_clipboard

"
" Go to or do
"

" Open profile directory
bind gd openprofile

" Go to Firefox profile manager
bind gp open about:profiles
bind gP tabopen about:profiles

" Go to Firefox advanced configuration
bind gc open about:config
bind gC tabopen about:config

" View Tridactyl config as JSON.
bind gv viewconfig

" Watch video or listen to audio in external player using `youtube-dl`.
bind gm openmedia

" Detach tab
bind gd tabdetach

" Detach tab duplicate
bind gD composite tabduplicate ; tabdetach

" Jump to heading
bind gj fillcmdline goto

"
" Search
"

bind / fillcmdline find
bind ? fillcmdline find -?
bind n findnext 1
bind N findnext -1

"
" Yank
"

" Yank Markdown link
bind Y fillcmdline clipboard

" Jira issue key or URL
bindurl .*\.atlassian.net/jira/software/c/projects yj yankjiraissue
bindurl .*\.atlassian.net/jira/software/c/projects yJ yankjiraurl

"
" Write/save
"

bind <Space>wi writeinstagram

"
" Change
"

" Change container on capital C followed by another C for no container, W for work, and so on.
" Multiple version created so that it doesn't matter if Shift is pressed or released on the second
" key press.

" Container -> none
bind CC recontain none
bind Cc recontain none
bind <Space>CC recontain none
bind <Space>Cc recontain none

" Container -> home
bind CR recontain home
bind Cr recontain home
bind <Space>Cr recontain home
bind <Space>CR recontain home

" Container -> work
bind Cw recontain work
bind CW recontain work
bind <Space>CC recontain work
bind <Space>Cc recontain work

" Container -> black hole (to do, to remember, etc.)
bind CR recontain black hole
bind Cr recontain black hole
bind <Space>Cr recontain black hole
bind <Space>CR recontain black hole

"
" Navigation
"

" Scroll half page on h and l
bind h scrollpage -0.5
bind l scrollpage 0.5

" Navigate tab and history using Shift
bind H tabprev
bind J back
bind K forward
bind L tabnext

"
" Command mode
"

" Vim style
bind --mode=ex <C-h> exclaim_quiet wtype -k left
bind --mode=ex <C-j> exclaim_quiet wtype -k down
bind --mode=ex <C-k> exclaim_quiet wtype -k up
bind --mode=ex <C-l> exclaim_quiet wtype -k right

" Emacs style
bind --mode=ex <C-u> fillcmdline_notrail
bind --mode=ex <C-a> exclaim_quiet wtype -k home
bind --mode=ex <C-e> exclaim_quiet wtype -k end
bind --mode=ex <A-f> exclaim_quiet wtype -M ctrl -k right
bind --mode=ex <A-b> exclaim_quiet wtype -M ctrl -k left
bind --mode=ex <A-d> exclaim_quiet wtype -M ctrl -k delete

" Compromise style (when Control can't be used)
bind --mode=ex <A-n> exclaim_quiet wtype -k down
bind --mode=ex <A-p> exclaim_quiet wtype -k up

"
" Insert mode (from click) and input mode (from gi bind)
"

" Vim style
bind --mode=insert,input <C-h> exclaim_quiet wtype -k left
bind --mode=insert,input <C-j> exclaim_quiet wtype -k down
bind --mode=insert,input <C-k> exclaim_quiet wtype -k up
bind --mode=insert,input <C-l> exclaim_quiet wtype -k right

" Emacs stylinsert
bind --mode=insert,input <C-a> exclaim_quiet wtype -k home
bind --mode=insert,input <C-e> exclaim_quiet wtype -k end
bind --mode=insert,input <A-f> exclaim_quiet wtype -M ctrl -k right
bind --mode=insert,input <A-b> exclaim_quiet wtype -M ctrl -k left
bind --mode=insert,input <A-d> exclaim_quiet wtype -M ctrl -k delete

" Open in editor (<C-i> doesn't always work)
bind --mode=insert,input <A-i> editor
bind --mode=insert,input <C-.> editor

""
" MARKS
""

"
" Personal
"

quickmark c https://calendar.protonmail.com/u/1
quickmark d https://drive.protonmail.com/u/1
quickmark g https://github.com
quickmark i https://imgur.com
quickmark m https://mail.protonmail.com/u/1
quickmark n https://search.nixos.org/packages?channel=unstable&size=500
quickmark r https://reddit.com
quickmark y https://youtube.com

"
" Work
"

quickmark A https://eu-west-1.console.aws.amazon.com/ec2/v2/home?region=eu-west-1#Instances:sort=instanceId
quickmark C https://calendar.google.com/calendar/r?pli=1
quickmark D https://drive.google.com/drive/shared-drives
quickmark G https://github.com/LeeroyGroup
quickmark J https://leeroy-group.atlassian.net/jira/software/c/projects/OF/boards/69
quickmark M https://mail.google.com/mail/u/0/#inbox
quickmark P https://leeroy-group.atlassian.net/wiki/spaces/CLASS/overview
quickmark V https://meet.google.com/landing?authuser=1

"
" Marks on ' and ` like Vim (Tridactyl's own backtick didn't seem to worK; but maybe now they do)
"

" bindreplaceprefix go '
" bindreplaceprefix go `

""
" MISCELLANEOUS
""

" Equivalent to former `set csp clobber`, weakening CSP to make Tridactyl work on more pages.
" See: https://github.com/tridactyl/tridactyl/blob/master/src/lib/requests.ts
jsb browser.webRequest.onHeadersReceived.addListener(tri.request.clobberCSP,{urls:["<all_urls>"],types:["main_frame"]},["blocking","responseHeaders"])

" Set AMO fingerprinting and restricted domains to allow Tridactyl to work on more sites.
fixamo_quiet

""
" AUTO COMMANDS
"
" Commands must be a single line unless a backslash is added to the end of the line. The following
" workflow makes it easier to work with long one-line JavaScript commands:
"
" 1. Copy the JavaScript portion of the command below.
" 2. Paste the JavaScript into a multi-line DevTools console.
" 3. Click the pretty print button to format the code.
" 4. Edit as needed, then copy the finished code.
" 5. Paste the code into Neovim/Vim.
" 6. Visually mark the lines with `V` and `j/k`, then press `<S-j>` to join them without indents.
"
" Alternatively paste the code into the URL bar or Tridactyl's command line and copy it again. That
" will join the lines, but extra spaces will remain from indentation.
"
" You can also use a minification tool to remove as much as possible while also adding missing
" semi-colons as needed to prevent errors. But keep in mind that an uglifier as opposed to a
" minifier isn't recommended since it produces bandwidth-saving production bundles by also
" truncating variable names, making the code much less readable---hence the name.
" 
" Recommended:
"   - DuckDuckGo minifier and prettifier instant answer: 
"     https://duckduckgo.com/?q=minify+js&ia=answer
""

"
" DocLoad
"

" All sites
"   Utilities used by other commands (or in JavaScript console)
autocmd DocLoad .* js const N = { param(str) { new URLSearchParams(location.search).get(str); }, pathStart(str) { return location.pathname.startsWith(str); }, pathMatch(regex) { const matches = location.href.match(regex); return matches; }, log: console.log.bind(window, "%c N.log ", "background: #d8dee9; color: #2e3440; font-weight: bold;"), yank(str) { navigator.clipboard.writeText(str); }, yankLoud(str) { N.yank(str); N.notify(`Yanked "${str}"`); }, run(str) { tri.excmds.composite(str); }, notify(str) { N.run(`notify ${str}`); }, query(str) { return document.querySelector(str); }, queryAll(str) { return document.querySelectorAll(str); }, q(str) { return N.query(str); }, qa(str) { return N.queryAll(str); } }

" open.qobuz.com
"   Redirect Qobuz share links to the web player like registered users would expect
autocmd DocLoad open.qobuz.com urlmodify -t open.qobuz.com play.qobuz.com

" search.nixos.org
"   Add copy to clipboard button
autocmd DocLoad .*search\.nixos\.org/packages.+ js setTimeout(() => { const node = document.createElement('li'); const link = document.createElement('a'); node.appendChild(link); link.href = '#'; link.classList.add('copy-to-clipboard'); link.innerText = 'Copy to clipboard'; document.querySelectorAll('.package ul').forEach(links => { const clone = node.cloneNode(true); clone.firstElementChild.title = links.parentElement.getElementsByClassName('search-result-button')[0].textContent; links.appendChild(clone); }); document.addEventListener('click', event => {  if (event.target.classList.contains('copy-to-clipboard')) { navigator.clipboard.writeText(event.target.title); event.preventDefault(); } }) }, 3000);

" nix-community.github.io/home-manager
"   Add copy to clipboard button
autocmd DocLoad .*nix-community\.github\.io/home-manager/options\.html.* js document.querySelectorAll('dt span.term').forEach(node => { const dt = node.parentElement.nextElementSibling; const textEl = dt.querySelector('.programlisting') || dt.querySelector('.literal'); if (textEl) { const copy = document.createElement('span'); copy.appendChild(document.createTextNode(' - ')); copy.style.cursor = 'pointer'; const code = document.createElement('code'); code.className = 'copy'; code.setAttribute('data-copy', `${node.textContent} = ${textEl.textContent.trim()};`); code.appendChild(document.createTextNode('Copy to clipboard')); copy.appendChild(code); node.appendChild(copy); } }); document.querySelector('dl').addEventListener('click', event => { if (event.target.className === 'copy') { const text = event.target.getAttribute('data-copy'); navigator.clipboard.writeText(text); console.log(text); }});

""
" NOTES
""

"
" Setting newtab to a data-uri (not yet supported)
"

" set newtab data:text/html,<html><head><title>New tab</title><style>body { background: rgb(46, 52, 64); color: white; padding: 60px 20px; text-align: center; font: 1rem sans; } h1 { margin: 0 0 20px; } body > div { display: inline-block; text-align: left; } div > div {} span { display: inline-block; } span:first-child { margin: 0 20px 0 0; } pre { margin: 0; } a,a:hover { color: white; display: inline-block; text-decoration: none; top: 12px; right: 12px; position: absolute; }</style></head><body><h1>Where to?</h1><div><div><span><pre>:o</pre></span><span>Open...</span></div><div><span><pre>:t</pre></span><span>Open in tab...</span></div></div><a href="">?</a></body></html>

