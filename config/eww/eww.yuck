;;
; EWW CONFIGURATION
; 
; Wayland EWW widgets used with River WM. EWW is a standalone widget system built in Rust featuring
; its own language called Yuck that you're seeing here.
;
; Using this so that if a feature is missing then we can add it; if we get annoyed by any GUI detail
; then it's our own fault; and if it's not fixed quickly and we whine about lazy developers then
; we're only insulting ourselves---if we don't own it, we can't own up to it.
;
; Reference:
;
; * Documentation:
;   https://elkowar.github.io/eww  
; * Built-in widgets:
;   https://elkowar.github.io/eww/widgets.html
;
; @author   Daniel Nordstrom <d@mrnordstrom.com>
; @homepage https://mrnordstrom.com
; @license  MIT
; @updated  2022-07-29 13:10
; @version  2022.210
;;

(defvar is-hovering false)
(defvar is-locked-date false)

(defvar tags '[{ "tag": 1, "label": 1 }, { "tag": 2, "label": 2 }, { "tag": 4, "label": 3 }, { "tag": 8, "label": 4 }, { "tag": 16, "label": 5 }, { "tag": 32, "label": 6 }, { "tag": 64, "label": 7 }, { "tag": 128, "label": 8 }, { "tag": 256, "label": 9 }]')
(defvar active-tag "1")
(defvar hover-tag "0")

(defpoll volume-value :interval "1s" "pamixer --get-volume")
(defpoll volume-label :interval "1s" '[ "$(pamixer --get-mute)" = "true" ] && printf "MUT" || printf "VOL"')

(defvar clock-separator "·")
(defvar clock-lock-date false)
(defpoll clock-weekday :interval "1h" "date +'%A'")
(defpoll clock-time :interval "10s" "date +'%H:%M'")
(defpoll clock-date :interval "1h" "date +'%B %-d'")

(defwidget bar []
  (eventbox :onhover "eww update is-hovering=true"
            :onhoverlost "eww update is-hovering=false"
    (centerbox :orientation "h"
      (left)
      (center)
      (right))))

(defwidget left []
  (box :class "left" :orientation "h" :space-evenly false :halign "start"
    (launcher :class "logo"
              :onclick "riverctl spawn 'dolphin ~'"
              :onrightclick "riverctl spawn 'GTK_THEME=Catppuccin-Latte-Peach nemo ~'"
              :onmiddleclick "riverctl spawn 'GTK_THEME=Catppuccin-Latte-Peach nautilus ~'"
              :icon "")
    (tags)
    (left-launchers)))

(defwidget center []
  (box :class "center" :orientation "h" :space-evenly false :halign "center"
    (clock)))

(defwidget right []
  (box :class "right" :orientation "h" :space-evenly false :halign "end"
    (right-launchers)
    (metric :label "CPU"
            :value {round(EWW_CPU.avg, 0)}
            :class "cpu"
            :onchange ""
            :onclick "riverctl spawn 'kitty --title popupterm -e btm'"
            :onrightclick ""
            :onmiddleclick "")
    (metric :label "RAM"
            :value {EWW_RAM.used_mem_perc}
            :class "ram"
            :onchange ""
            :onclick "riverctl spawn 'kitty --title popupterm -e btm'"
            :onrightclick ""
            :onmiddleclick "")
    (metric :label "DISK"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :class "disk"
            :onchange ""
            :onclick "riverctl spawn 'kitty --title popupterm -e btm'"
            :onrightclick ""
            :onmiddleclick "")
    (metric :label volume-label
            :value {volume-value == "" ? 0 : volume-label}
            :class {volume-label == "MUT" ? "volume muted" : "volume"}
            :onchange "pamixer --set-volume {}"
            :onclick "pamixer --toggle-mute"
            :onmiddleclick ""
            :onrightclick "riverctl spawn pavucontrol")))

; (defwidget tray []
;   (box :class "tray" :orientation "h" (system-tray)))

(defwidget right-launchers []
  (revealer :class "launchers revealer ${is-hovering ? 'expanded' : 'collapsed'}"
            :transition "slideleft"
            :reveal is-hovering
            :duration "0.2s"
    (box :spacing 10
      (launcher :class "screenshot"
              :onclick "riverctl spawn screensnap"
              :onmiddleclick "riverctl spawn 'screensnap --window'"
              :onrightclick "riverctl spawn 'screensnap --screen'"
              :icon ""))))

(defwidget left-launchers []
  (revealer :class "launchers revealer ${is-hovering ? 'expanded' : 'collapsed'}"
            :transition "slideleft"
            :reveal is-hovering
            :duration "0.2s"
    (box :spacing 10
      (launcher :class "files"
                :icon ""
                :onclick "riverctl spawn dolphin"
                :onrightclick "riverctl spawn 'GTK_THEME=Catppuccin-Latte-Peach nemo'"
                :onmiddleclick "riverctl spawn 'kitty --class popupterm --single-instance --instance-group popupterm'")
      (launcher :class "files"
                :icon ""
                :onclick "riverctl spawn 'dolphin ~/Pictures/Screenshots'"
                :onrightclick "riverctl spawn 'GTK_THEME=Catppuccin-Latte-Peach nemo ~/Pictures/Screenshots'"
                :onmiddleclick "riverctl spawn 'GTK_THEME=Catppuccin-Latte-Peach nautilus ~/Pictures/Screenshots'")
      (launcher :class "firefox"
                :onclick "riverctl spawn 'firefox -P Default --new-tab about:blank'"
                :onrightclick "riverctl spawn 'firefox -P Default --new-window about:blank'"
                :onmiddleclick "riverctl spawn 'chromium'"
                :icon "")
      (launcher :class "music"
                :onclick "riverctl spawn 'firefox -P Music'"
                :onrightclick ""
                :onmiddleclick ""
                :icon "")
      (launcher :class "chat"
                :onclick "riverctl spawn 'element-desktop'"
                :onrightclick ""
                :onmiddleclick ""
                :icon "")
      (launcher :class "mail"
                :onclick "riverctl spawn 'firefox -P Default https://mail.proton.me'"
                :onrightclick ""
                :onmiddleclick ""
                :icon ""))))

; Simple box with the given class, containing a button with the given icon (or any text) and click
; commands. All arguments must be specified but may be empty strings.
;
; Useful PragmataPro Mono glyphs:
;   * UI
;                                                    
;                                                   
;      
;   * Folders
;                    
;   * Brands
;                                                
;            
;   * Arrows
;                                                  
;             
;   * Circles
;               
;                 
;                  
;   * Battery
;                                   
;   * Separators
;                   
;
; @param icon           string - Icon to show (or technically anything).
; @param class          string - Class of container box.
; @param onclick        string - Command to run on left click.
; @param onmiddleclick  string - Command to run on middle click.
; @param onrightclick   string - Command to run on right click.
(defwidget launcher [onclick onrightclick onmiddleclick class icon]
  (box :class "launcher ${class}"
       :orientation "h"
    (button :onclick onclick :onmiddleclick onmiddleclick :onrightclick onrightclick icon)))

(defwidget metric [label value onclick onrightclick onmiddleclick onchange class]
  (box :orientation "h"
       :class "metric ${class}"
       :space-evenly false
    (button :class "label"
            :onclick onclick
            :onrightclick onrightclick
            :onmiddleclick onmiddleclick
      (box :orientation "h" :space-evenly false label
        (scale :min 0
               :max 101
               :active {onchange != ""}
               :value {round(value, 0)}
               :onchange onchange)))))

(defwidget clock []
  (box :space-evenly false :class "clock"
    (revealer :class "revealer ${is-hovering ? 'expanded' : 'collapsed'}"
              :transition "slideleft"
              :reveal {is-hovering || is-locked-date}
              :duration "0.2s"
      (box :space-evenly false :spacing 8
        (box :class "weekday" clock-weekday)
        (box :class "separator" clock-separator)
        (box "")))

    (button :class "time"
            :onclick "eww update is-locked-date=${is-locked-date ? 'false' : 'true'}"
            clock-time)

    (revealer :class "revealer ${is-hovering ? 'expanded' : 'collapsed'}"
            :transition "slideleft"
            :reveal {is-hovering || is-locked-date}
            :duration "0.2s"
      (box :space-evenly false :spacing 8
        (box "")
        (box :class "separator" clock-separator)
        (box :class "date" clock-date)))))

(defwidget tags []
  (box :class "tags"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (for tag in tags
      (box :class {active-tag == tag.tag ? "tag active" : "tag inactive"}
        (eventbox 
          :onhover "eww update hover-tag=${tag.tag}"
          :onhoverlost "eww update hover-tag=0"
          (button :onclick "riverctl set-focused-tags ${tag.tag} ; eww update active-tag=${tag.tag}"
            {active-tag == tag.tag ? "" : (hover-tag == tag.tag ? tag.label : "")}))))))

(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry
    :x "0%"
    :y "0%"
    :width "100%"
    :height "34px"
    :anchor "top center")
  :stacking "fg"
  :exclusive true
  :focusable false
  (bar)
)
